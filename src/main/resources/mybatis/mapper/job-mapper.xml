<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.findjob.mapper.JobMapper">

    <resultMap id="jobResultMap" type="Job">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="createTime" column="create_time" />
        <result property="timeStamp" column="time_stamp" />
        <result property="creator" column="creator" />
        <result property="workYear" column="work_year" />
        <result property="sex" column="sex" />
        <result property="requireCount" column="require_count" />
        <result property="age1" column="age1" />
        <result property="age2" column="age2" />
        <result property="education" column="education" />
        <result property="place" column="place" />
        <result property="company" column="company_id" />
        <result property="intro" column="intro" />
    </resultMap>

    <insert id="insertJob" parameterType="com.findjob.pojo.Job" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO job (creator, name, work_year, sex, require_count, age1, age2, education, place, company_id, intro)
        VALUES (#{creator}, #{name}, #{workYear}, #{sex}, #{requireCount}, #{age1},
                #{age2}, #{education}, #{place}, #{company}, #{intro})
    </insert>

    <select id="findJobById" resultMap="jobResultMap" parameterType="integer">
        SELECT job.id, job.name, work_year, sex, require_count, age1, age2, education,
               place, job.intro, job.time_stamp, user.name AS creator, c.name AS company_id
        FROM job JOIN user ON job.creator = user.id  JOIN company c on job.company_id = c.id
        WHERE job.id = #{id}
    </select>

    <select id="getJobsCount" resultType="integer" parameterType="integer">
        SELECT COUNT(*) FROM job
    </select>

    <select id="getAllJobs" resultMap="jobResultMap">
        SELECT job.id, job.name, work_year, sex, require_count, age1, age2, education,
               place, job.intro, job.time_stamp, job.create_time, user.name AS creator, c.name AS company_id
        FROM job JOIN user ON job.creator = user.id JOIN company c on job.company_id = c.id
    </select>

    <update id="updateJob" parameterType="com.findjob.pojo.Job">
        UPDATE job SET name = #{name}, work_year = #{workYear}, sex = #{sex}, require_count = #{requireCount},
                       age1 = #{age1}, age2 = #{age2}, education = #{education}, place = #{place},
                       company_id = #{company}, intro = #{intro}
        WHERE id = #{id}
    </update>

    <delete id="deleteJob" parameterType="integer" flushCache="true">
        DELETE FROM job WHERE id = #{id}
    </delete>

    <select id="getLatestJobs" resultMap="jobResultMap">
        SELECT job.id, job.name, work_year, sex, require_count, age1, age2, education,
               place, job.intro, job.time_stamp, job.create_time, c.name AS company_id
        FROM job JOIN company c on job.company_id = c.id ORDER BY create_time DESC LIMIT 10
    </select>

    <select id="findJobsByKeyword" resultMap="jobResultMap" parameterType="string">
        SELECT job.id, job.name, work_year, sex, require_count, age1, age2, education,
               place, job.intro, job.time_stamp, job.create_time, c.name AS company_id
        FROM job JOIN company c on job.company_id = c.id
        <if test="_parameter != null and _parameter != ''">
            <bind name="pattern" value="'%' + _parameter + '%'" />
            WHERE job.name LIKE #{pattern} OR c.name LIKE #{pattern}
        </if>
    </select>

    <select id="findJobResumeByUserId" resultType="com.findjob.pojo.JobResume">
        SELECT job_resume.id, j.name AS job, resume_id AS resume, c.name AS company, r.name AS realName,
               job_resume.create_time AS createTime, step, job_resume.time_stamp AS timeStamp
        FROM job_resume
            JOIN job j on job_resume.job_id = j.id
            JOIN company c on j.company_id = c.id
            JOIN resume r on job_resume.resume_id = r.id
        WHERE job_resume.resume_id = (SELECT id FROM resume WHERE user_id = #{userId})
    </select>

    <select id="getAllJobResumes" resultType="com.findjob.pojo.JobResume">
        SELECT job_resume.id, j.name AS job, resume_id AS resume, c.name AS company, r.name AS realName,
               job_resume.create_time AS createTime, step, job_resume.time_stamp AS timeStamp
        FROM job_resume
                 JOIN job j on job_resume.job_id = j.id
                 JOIN company c on j.company_id = c.id
                 JOIN resume r on job_resume.resume_id = r.id
    </select>
</mapper>