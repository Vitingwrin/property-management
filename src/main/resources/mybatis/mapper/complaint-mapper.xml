<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.property.mapper.ComplaintMapper">

    <resultMap id="complaintResultMap" type="Complaint">
        <id property="id" column="id" />
        <result property="createTime" column="create_time" />
        <result property="timeStamp" column="time_stamp" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="creator" column="creator" />
        <result property="feedbackUser" column="feedback_user" />
        <result property="feedbackContent" column="feedback_content" />
        <result property="feedbackTime" column="feedback_time" />
    </resultMap>

    <insert id="insertComplaint" useGeneratedKeys="true" keyProperty="id" parameterType="com.property.pojo.Complaint">
        INSERT INTO complaint(creator, TITLE, CONTENT)
        VALUES (#{creator}, #{title}, #{content})
    </insert>

    <update id="updateComplaint" parameterType="com.property.pojo.Complaint">
        UPDATE complaint SET title = #{title}, content = #{content}, feedback_content = #{feedbackContent},
                             feedback_time = #{feedbackTime}, feedback_user = #{feedbackUser}
        WHERE id = #{id}
    </update>

    <delete id="deleteComplaint" parameterType="integer">
        DELETE FROM complaint WHERE id = #{id}
    </delete>

    <select id="getComplaintsByUserId" resultMap="complaintResultMap">
        SELECT complaint.ID, complaint.CREATE_TIME, complaint.TIME_STAMP, u.name AS creator,
               TITLE, CONTENT, feedback_content, feedback_time, u2.name AS feedback_user
        FROM complaint
        JOIN user u on complaint.creator = u.id
        LEFT JOIN user u2 on complaint.feedback_user = u2.id
        WHERE creator = #{userId}
        ORDER BY complaint.create_time DESC
    </select>

    <select id="getAllComplaints" resultMap="complaintResultMap">
        SELECT complaint.ID, complaint.CREATE_TIME, complaint.TIME_STAMP, u.name AS creator,
               TITLE, CONTENT, feedback_content, feedback_time, u2.name AS feedback_user
        FROM complaint
                 JOIN user u on complaint.creator = u.id
                 LEFT JOIN user u2 on complaint.feedback_user = u2.id
        ORDER BY complaint.create_time DESC
    </select>
</mapper>